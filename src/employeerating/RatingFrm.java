/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package employeerating;

import com.google.gson.Gson;
import employeerating.dialog.CriteriaDialog;
import employeerating.dialog.ScoreDialog;
import employeerating.model.CriteriaModel;
import employeerating.model.RatingModel;
import employeerating.model.RatingValueModel;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author macbookpro
 */
public class RatingFrm extends javax.swing.JInternalFrame {

    private String employeeId;
    private final Frame frame;
    private ArrayList<RatingModel> ratingModels;
    private ArrayList<CriteriaModel> criteriaModels;

    /**
     * Creates new form HomeFrm
     */
    public RatingFrm() {
        initComponents();
        generateDataToTable();
        JInternalFrame internalFrame = this; // Replace with your internal frame

        frame = (Frame) SwingUtilities.getAncestorOfClass(JFrame.class, internalFrame);
        if (frame != null) {
            // You have the frame reference
            System.out.println("Found frame: " + frame.getTitle());
        } else {
            // Frame not found
            System.out.println("Could not find frame for the internal frame.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableScore = new javax.swing.JTable();

        setSize(new java.awt.Dimension(100, 100));

        tableScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableScore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableScoreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableScore);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 62, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableScoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableScoreMouseClicked
        // TODO add your handling code here:
        int row = tableScore.getSelectedRow();
        String row_id = (tableScore.getModel().getValueAt(row, 0).toString());
        employeeId = row_id;
        System.out.println("employeeId : " + employeeId);
        ScoreDialog dialog = new ScoreDialog(frame, true, employeeId);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                generateDataToTable();
            }
        });
        dialog.setVisible(true);
    }//GEN-LAST:event_tableScoreMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableScore;
    // End of variables declaration//GEN-END:variables

    private void generateDataToTable() {
        ratingModels = new DbConnection().SelectListRatingWithEmployee();
        criteriaModels = new DbConnection().SelectListCriteria();
        String col[] = new String[2 + criteriaModels.size()];
        col[0] = "No";
        col[1] = "Nama";
        DefaultTableModel tableModel = null;
        for (int i = 0; i < ratingModels.size(); i++) {
            Object[] data = new Object[2 + criteriaModels.size()];
            data[0] = i + 1;
            data[1] = ratingModels.get(i).getEmployeeaName();
            for (int j = 0; j < criteriaModels.size(); j++) {
                col[j + 2] = criteriaModels.get(j).getCriteriaName();
                if (ratingModels.get(i).getRatingValue().equalsIgnoreCase("{}")) {
                    data[j + 2] = "0";
                } else {
                    RatingValueModel ratingValueModel = new Gson().fromJson(ratingModels.get(i).getRatingValue(), RatingValueModel.class);
                    switch (j) {
                        case 0:
                            data[j + 2] = ratingValueModel.K1;
                            break;
                        case 1:
                            data[j + 2] = ratingValueModel.K2;
                            break;
                        case 2:
                            data[j + 2] = ratingValueModel.K3;
                            break;
                        case 3:
                            data[j + 2] = ratingValueModel.K4;
                            break;
                        case 4:
                            data[j + 2] = ratingValueModel.K5;
                            break;
                        default:
                            break;
                    }
                }
            }
            if (tableModel == null) {
                tableModel = new DefaultTableModel(col, 0);
            }

            tableModel.addRow(data);
        }

        System.out.println("raw count rating by employee " + tableModel.getRowCount());
        tableScore.setModel(tableModel);
    }
}
